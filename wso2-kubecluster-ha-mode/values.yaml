# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
Namespace: wso2is

wso2:
  deployment:
    dependencies:
      mysql:
        # The configuration should be set to be 'true' if a MySQL database should be spawned as a pod within the cluster
        enabled: true

    wso2is: 
      config: true
      # Container image configurations
      # If a custom image must be used, provide its value
      hostname: "wso2.is"
      dockerRegistry: "docker.wso2.com"
      imageName: "wso2is"
      imageTag: "6.1.0.0"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Never

      # Number of deployment replicas
      replicas: 2

      # Kubernetes Probes
      # Startup probe executed prior to Liveness Probe taking over
      startupProbe:
        # Number of seconds after the container has started before startup probes are initiated
        initialDelaySeconds: 60
        # How often (in seconds) to perform the probe
        periodSeconds: 5
        # Number of attempts
        failureThreshold: 30
      # Indicates whether the container is running
      livenessProbe:
        # How often (in seconds) to perform the probe
        periodSeconds: 10
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 60
        # How often (in seconds) to perform the probe
        periodSeconds: 10

      resources:
        # These are the minimum resource recommendations for running WSO2 Identity and Access Management product profiles
        # as per official documentation (https://is.docs.wso2.com/en/latest/setup/installation-prerequisites/)
        requests:
          # The minimum amount of memory that should be allocated for a Pod
          memory: "2Gi"
          # The minimum amount of CPU that should be allocated for a Pod
          cpu: "1000m"
        limits:
          # The maximum amount of memory that should be allocated for a Pod
          memory: "4Gi"
          # The maximum amount of CPU that should be allocated for a Pod
          cpu: "2000m"
        # JVM settings
        # These are the resource allocation configurations associated with the JVM
        # Refer to the official documentation for advanced details (https://is.docs.wso2.com/en/latest/setup/performance-tuning-recommendations/#jvm-settings)
        jvm:
          # Resource allocation for the Java Heap
          heap:
            memory:
              # Initial and minimum Heap size
              xms: "1024m"
              # Maximum Heap size
              xmx: "2048m"

      # If the deployment configurations for the WSO2 Identity Server v5.11.0 (<WSO2IS>/repository/conf/deployment.toml),
      # add the customized configuration file under (wso2 -> deployment -> wso2is -> config -> deployment.toml)
#      config: ""
#        deployment.toml: |-
#          # Deployment configurations for Identity Server deployment
#          # <replace with deployment configurations for the WSO2 Identity Server (<WSO2IS>/repository/conf/deployment.toml)>

      # Configure Ingresses
      ingress:
        className: "nginx"
        identity:
          # Hostname for Identity Server
          hostname: "identity.wso2.com"
          # Annotations for the Identity service Ingress
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
